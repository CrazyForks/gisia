%div{ class: 'w-full bg-white p-6' }
  %div{ class: 'w-full max-w-6xl mx-auto flex flex-col px-4' }
    %div{ class: 'flex justify-between items-center mb-6' }
      %div
        %div{ class: 'flex items-center gap-3 mb-1' }
          %h1{ class: 'text-2xl font-semibold text-gray-800' }
            = pipeline_title(@pipeline)
          - jobs_title = "Jobs (#{@pipeline.builds.count})"
          %span{ class: 'text-lg text-slate-500' }
            #{jobs_title}
        %div{ class: 'flex items-center gap-3 text-sm text-gray-500' }
          - badge_colors = { 'success' => 'bg-emerald-500/10 text-emerald-700 ring-1 ring-emerald-500/20', 'failed' => 'bg-rose-500/10 text-rose-700 ring-1 ring-rose-500/20', 'running' => 'bg-blue-500/10 text-blue-700 ring-1 ring-blue-500/20', 'pending' => 'bg-amber-500/10 text-amber-700 ring-1 ring-amber-500/20' }
          %span{ class: "inline-flex items-center px-2 py-0.5 text-xs font-medium rounded #{badge_colors.fetch(@pipeline.status, 'bg-slate-500/10 text-slate-700 ring-1 ring-slate-500/20')}" }
            Status #{@pipeline.status.titleize}
          %span
            = @pipeline.user.username
          %span{ class: 'font-mono text-xs bg-gray-100 px-1 rounded' }
            = @pipeline.short_sha
          %span
            = time_ago_in_words(@pipeline.created_at) + ' ago'
          %span â€¢
          - if @pipeline.merge_request?
            %span 
              For Merge Request
              = link_to " ##{@pipeline.merge_request.id}", merge_request_path(@pipeline.merge_request), class: 'text-blue-600 hover:text-blue-700 font-medium transition-colors'
          - else
            %span For #{@pipeline.ref}
    
    = yield :pipeline_content
